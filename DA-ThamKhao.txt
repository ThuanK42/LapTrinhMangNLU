public static boolean unpack(String sfile,String fileName,String dPath) throws IOException{
		File sf = new File(sfile);
		File df = new File(dPath);
		if(!sf.exists()) return false;
		if(!df.exists()) return false;
		RandomAccessFile raf = new RandomAccessFile(sf, "rw");
		long nextEntry = raf.readLong();
		while(true){
			long fSize = raf.readLong();
			String fName = raf.readUTF();
//			long pos=raf.getFilePointer();
			if(fileName.equals(fName)){
				BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(df+File.separator+fileName));
//				for(int i=0;i<fSize;i++) bos.write(raf.read());
				
				byte[] arr = new byte[1024*100];
				long remain=fSize;
				int byteRead,readSize;
				while(remain>0){
					readSize = (int)((arr.length<remain)? arr.length : remain);
					byteRead = raf.read(arr,0,readSize);
					bos.write(arr,0,byteRead);
					remain-=byteRead;
				}
				
				bos.close();
				return true;
			}else{
//				raf.seek(pos+fSize);
				raf.seek(nextEntry);
				nextEntry=raf.readLong();
			}
			
			if(nextEntry==0){
				 fSize = raf.readLong();
				 fName = raf.readUTF();
				if(fileName.equals(fName)){
					BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(df+File.separator+fileName));
//					for(int i=0;i<fSize;i++) bos.write(raf.read());
					byte[] arr = new byte[1024*100];
					long remain=fSize;
					int byteRead,readSize;
					while(remain>0){
						readSize = (int)((arr.length<remain)? arr.length : remain);
						byteRead = raf.read(arr,0,readSize);
						bos.write(arr,0,byteRead);
						remain-=byteRead;
					}
					bos.close();
					return true;
				}
				break;
			}
		}
		raf.close(); 
		return false;
	}

public static boolean pack(String sFolder, String fileName) throws Throwable {
		File file = new File(sFolder);
		if(!file.exits())return false;
		RandomAccessFile raf = new RandomAccessFile(fileName, "rw");
		if (file.isDirectory()) {
			File[] dsFile = file.listFiles();
			int count = 0;
			for (File f : dsFile) {
				long cur = raf.getFilePointer();// 0
				long fileSize = f.length();
				String name = f.getName();
				count++;
				raf.writeLong(0);
				raf.writeLong(fileSize);
				raf.writeUTF(name);
				BufferedInputStream bos = new BufferedInputStream(new FileInputStream(f));
				int data;
				while ((data = bos.read()) != -1) {
					raf.write(data);
				}
				bos.close();
				long newPoint = raf.getFilePointer();
				if (count != dsFile.length) {
					raf.seek(cur);
					raf.writeLong(newPoint);
				}
				raf.seek(newPoint);
			}
			raf.close();
			return true;
		}
		return false;

}